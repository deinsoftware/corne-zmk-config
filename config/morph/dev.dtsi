mp_d_pound: morph_dev_pound {
    compatible = "zmk,behavior-mod-morph";
    label = "# °";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp POUND>, <&kp LC(LS(SEMICOLON))>;
    keep-mods = <(MOD_LALT)>;
};

mp_d_money: morph_dev_money {
    compatible = "zmk,behavior-mod-morph";
    label = "$ €";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp DLLR>, <&kp LC(N5)>;
    keep-mods = <(MOD_LALT)>;
};

mp_d_lb: morph_dev_left_brackets {
    compatible = "zmk,behavior-mod-morph";
    label = "[ «";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp LBKT>, <&kp LC(LBKT)>;
    keep-mods = <(MOD_LALT)>;
};

mp_r_lb: morph_dev_right_brackets {
    compatible = "zmk,behavior-mod-morph";
    label = "] »";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp RBKT>, <&kp LC(RBKT)>;
    keep-mods = <(MOD_LALT)>;
};

mp_d_a: morph_dev_asterisk {
    compatible = "zmk,behavior-mod-morph";
    label = "* **";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp ASTRK>, <&m_d_eo>;
};

// tap:     +
// shift:   +=
// alt:     ++
mp_d_ps_a: morph_dev_plus_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "+ ++";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp PLUS>, <&m_d_io>;
    keep-mods = <(MOD_LALT)>;
};
mp_d_ps: morph_dev_plus_symbol {
    compatible = "zmk,behavior-mod-morph";
    label = "+ +=";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_d_ps_a>, <&m_d_as>;
};

mp_d_m: morph_dev_minus {
    compatible = "zmk,behavior-mod-morph";
    label = "- --";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp MINUS>, <&m_d_do>;
};

mp_d_e: morph_dev_equal {
    compatible = "zmk,behavior-mod-morph";
    label = "= =>";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp EQUAL>, <&m_d_a>;
};

mp_d_s: morph_dev_slash {
    compatible = "zmk,behavior-mod-morph";
    label = "/";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp FSLH>, <&kp LA(LS(A))>;
};

mp_d_lao: morph_dev_logical_and_operator {
    compatible = "zmk,behavior-mod-morph";
    label = "& &&";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp AMPS>, <&m_d_la>;
};

mp_d_loo: morph_dev_logical_or_operator {
    compatible = "zmk,behavior-mod-morph";
    label = "| ||";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp PIPE>, <&m_d_lo>;
};

// tap:         ?
// shift:       ??=
// alt:         ¿
// alt + shift: ??
mp_d_qs_as: morph_dev_question_symbol_alt_shift {
    compatible = "zmk,behavior-mod-morph";
    label = "¿ ??";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp LC(FSLH)>, <&m_d_nco>;
    keep-mods = <(MOD_LALT)>;
};
mp_d_qs_a: morph_dev_question_symbol_alt {
    compatible = "zmk,behavior-mod-morph";
    label = "? ¿";
    #binding-cells = <0>;
    mods = <(MOD_LALT)>;
    bindings = <&kp QMARK>, <&mp_d_qs_as>;
    keep-mods = <(MOD_LALT)>;
};
mp_d_qs: morph_dev_question_symbol {
    compatible = "zmk,behavior-mod-morph";
    label = "? ??=";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&mp_d_qs_a>, <&m_d_nca>;
};

mp_d_es: morph_dev_exclamation_symbol {
    compatible = "zmk,behavior-mod-morph";
    label = "! !!";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&kp EXCL>, <&m_d_bo>;
};

mp_d_ql: morph_dev_question_logical {
    compatible = "zmk,behavior-mod-morph";
    label = "?. ?░:░";
    #binding-cells = <0>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    bindings = <&m_d_oco>, <&m_d_cto>;
};

